April 2014 

SPRNT requires a Linux based development environment with tools including a C++
and C compiler, a Fortran compiler, static library maintenance routines (ranlib and ar).
It also requires a system-wide installation of BLAS (Basic Linear Algebra Subprograms) and 
dynamic-link library facilities.

SPRNT needs a linear algebra package. Any sparse linear algebra package can be used, as far 
as it follows an interface and is compiled as a dynamically linked library. Two good candidates 
are UMFPACK and KLU from Tim Davis at University of Florida. Instructions are provided on how 
to obtain the source code and to build dynamically linked libraries (.so file). (Or you can 
simply type "make dep")

SPRNT should be compiled smoothly on most Linux platforms. On Mac OS, the source code has 
been compiled successfully on Mavericks, except for the fortran routines in cmlib: I don't 
have a fortran compiler. It won't compile on Windows platforms.

To build SPRNT, follow the steps below:
 
./configure (./configure --help for help)
make dep                           : build external components
make                               : build the library and executable 
make test                          : testing - optional

To install and uninstall: 

make install
make uninstall

By default, the destination directory is (.), which means the binary, library and header
files will be installed in ./bin, ./lib and ./include directories. You can change the
destinations by specifying:

./configure --prefix=<destination>

You will need write permission to the destination directories.

To clearn up:

make clean                          : remove the objective files
make realclean                      : remove the static library and executables
make distclean                      : remove thirdparty components

To run SPRNT:
The easiest way is to use the script "run_spt.sh". After "make install", it is available in
bin directory (default ./bin), as well as the SPRNT executable and the dynamic libray. There
are afew examples in ./examples directory, which can be run manually 


